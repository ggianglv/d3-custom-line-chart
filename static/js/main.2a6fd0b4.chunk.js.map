{"version":3,"sources":["components/Annotation.js","components/LineChart.js","App.js","reportWebVitals.js","index.js"],"names":["Annotation","xScale","yScale","chartRef","data","margin","value","divRef","useRef","useState","divStyle","setDivStyle","useEffect","current","getBoundingClientRect","chartTop","top","chartLeft","left","chartRight","right","width","height","x","index","opacity","ref","style","className","annotation","LineChart","lines","annotations","tooltipRef","tooltip","setTooltip","renderChart","bottom","chartWidth","chartHeight","d3","domain","map","d","i","range","arr","forEach","item","line","push","key","Math","max","getMax","tooltipStyle","useMemo","tooltipWidth","tooltipHeight","visibility","svg","append","attr","call","tickFormat","_","date","ticks","tickSize","tickSizeOuter","lineGenerator","y","curve","datum","color","selectAll","enter","on","dots","fill","clicks","App","uv","pv","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a6fd0b4.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\n\nconst Annotation = ({xScale, yScale, chartRef, data, margin, value}) => {\n  const divRef = useRef(null)\n  const [divStyle, setDivStyle] = useState({})\n  useEffect(() => {\n    const {top: chartTop, left: chartLeft, right: chartRight} = chartRef.current.getBoundingClientRect()\n    const {width, height} = divRef.current.getBoundingClientRect()\n    const x = xScale(data.index)\n    const y = yScale(value)\n    let top = chartTop + y + margin.top - height - 10\n    let left = chartLeft + x + margin.left - width / 2\n\n    if (left + width + margin.left + margin.right > chartRight) {\n      left = chartRight - width - margin.left - margin.right - 5\n    }\n\n    if (left < chartLeft + margin.left) {\n      left = chartLeft + margin.left\n    }\n\n\n    setDivStyle({\n      top,\n      left,\n      opacity: 1\n    })\n  }, [])\n\n  return (\n    <div ref={divRef} style={divStyle} className=\"annotation-item\">\n      {data.annotation}\n    </div>\n  );\n};\n\nexport default Annotation;\n","import React, { useEffect, useState, useRef, useMemo } from 'react';\nimport * as d3 from 'd3'\n\nimport './line-chart.css'\nimport Annotation from './Annotation';\n\n\nconst TICKS = 4\n\nconst LineChart = ({data, lines, width, height, annotations}) => {\n  const chartRef = useRef(null)\n  const tooltipRef = useRef(null)\n  const [tooltip, setTooltip] = useState(null)\n\n  useEffect(() => {\n    renderChart()\n  }, [])\n\n\n  const getMax = () => {\n    const arr = []\n    data.forEach(item => {\n      lines.forEach(line => {\n        arr.push(item[line.key])\n      })\n    })\n\n    return Math.max(...arr)\n  }\n\n  const margin = {top: 50, right: 50, bottom: 50, left: 50};\n  const chartWidth = width - margin.left - margin.right;\n  const chartHeight = height - margin.top - margin.bottom;\n\n  const xScale = d3.scalePoint()\n    .domain(data.map((d, i) => i))\n    .range([0, chartWidth])\n\n  const yScale = d3.scaleLinear()\n    .domain([0, getMax()])\n    .range([chartHeight, 0])\n\n  const tooltipStyle = useMemo(() => {\n    if (!tooltip || !chartRef.current || !tooltipRef.current) {\n      return {}\n    }\n    const value = tooltip[tooltip.key]\n    const {left: chartLeft, top: chartTop} = chartRef.current.getBoundingClientRect()\n    const {width: tooltipWidth, height: tooltipHeight} = tooltipRef.current.getBoundingClientRect()\n    let left = chartLeft + xScale(tooltip.index) + margin.left - tooltipWidth / 2\n    let top = chartTop + yScale(value) + margin.top - tooltipHeight - 10\n    if (top < chartTop) {\n      top = chartTop + yScale(value) + tooltipHeight + 10\n    }\n\n    return {\n      left,\n      top,\n      visibility: 'visible',\n    }\n  }, [tooltip, chartRef.current, tooltipRef.current])\n\n  const renderChart = () => {\n\n    const svg = d3.select(chartRef.current).append(\"svg\")\n      .attr(\"width\", chartWidth + margin.left + margin.right)\n      .attr(\"height\", chartHeight + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n    svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + chartHeight + \")\")\n      .call(d3.axisBottom(xScale).tickFormat((_, i) => data[i].date));\n\n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(d3.axisLeft(yScale).ticks(TICKS));\n\n    //Grid line\n    svg.append(\"g\")\n      .attr(\"class\", \"grid\")\n      .call(d3.axisLeft(yScale).ticks(TICKS)\n        .tickSize(-chartWidth)\n        .tickFormat(\"\").tickSizeOuter(0)\n      )\n\n    svg.append(\"g\")\n      .attr(\"class\", \"grid\")\n      .attr(\"transform\", \"translate(0,\" + chartHeight + \")\")\n      .call(d3.axisBottom(xScale)\n        .tickSize(-chartHeight)\n        .tickFormat(\"\").tickSizeOuter(0)\n      )\n\n    lines.forEach(line => {\n      const key = line.key\n      const lineGenerator = d3.line()\n        .x((d, i) => xScale(i))\n        .y(d => yScale(d[key]))\n        .curve(d3.curveMonotoneX)\n\n      svg.append(\"path\")\n        .datum(data)\n        .attr(\"class\", \"line\")\n        .attr('fill', 'none')\n        .attr('stroke', line.color)\n        .attr('stroke-width', 2)\n        .attr(\"d\", lineGenerator);\n\n      svg.append('g').selectAll(`circle-${line.key}`)\n        .data(data)\n        .enter().append(\"circle\")\n        .attr(\"class\", \"dot\")\n        .attr(\"fill\", line.color)\n        .attr(\"cx\", (d, i) => xScale(i))\n        .attr(\"cy\", d => yScale(d[key]))\n        .attr(\"r\", 5)\n        .on(\"mouseover\", (d, index, dots) => {\n          const dot = dots[index]\n          dot.style.fill = 'red'\n          setTooltip({\n            ...d,\n            index,\n            key,\n          })\n        })\n        .on(\"mouseout\", (d, index, dots) => {\n          const dot = dots[index]\n          dot.style.fill = line.color\n          setTooltip(null)\n        })\n    })\n  }\n\n  return (\n    <div>\n      <div ref={chartRef}/>\n\n      <div ref={tooltipRef} style={tooltipStyle} className=\"chart-tooltip\">\n        <div className=\"date\">15/10/2020</div>\n        <div className=\"property\">\n          <span className=\"label\">URL:</span>\n          <span className=\"value\">http://google.com</span>\n        </div>\n        <div className=\"property\">\n          <span className=\"label\">Clicks:</span>\n          <span className=\"value\">{tooltip?.clicks}</span>\n        </div>\n      </div>\n\n      {annotations.map((item, index) => (\n        <Annotation\n          key={index}\n          chartRef={chartRef}\n          value={data[item.index][item.key]}\n          data={item}\n          xScale={xScale}\n          yScale={yScale}\n          margin={margin}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default LineChart;\n","import React from 'react'\nimport './App.css';\nimport LineChart from \"./components/LineChart\";\n\nfunction App() {\n  const data = [\n    {\n      date: 'Test',\n      uv: 10,\n      pv: 20,\n    },\n    {\n      date: 'Test 1',\n      uv: 20,\n      pv: 10\n    },\n    {\n      date: 'Test 2',\n      uv: 5,\n      pv: 50,\n    },\n    {\n      date: 'Test 3',\n      uv: 60,\n      pv: 30,\n    },\n    {\n      date: 'Test 4',\n      uv: 50,\n      pv: 20\n    },\n    {\n      date: 'Test 5',\n      uv: 20,\n      pv: 80\n    },\n    {\n      date: 'Test 6',\n      uv: 40,\n      pv: 50,\n    },\n  ]\n\n  const lines = [\n    {\n      key: 'uv',\n      color: '#8884d8'\n    },\n    {\n      key: 'pv',\n      color: '#82ca9d'\n    },\n  ]\n\n  const annotations = [\n    {\n      key: 'uv',\n      index: 0,\n      annotation: 'First annotation'\n    },\n    {\n      key: 'uv',\n      index: 6,\n      annotation: 'Last annotaion'\n    },\n    {\n      key: 'uv',\n      index: 2,\n      annotation: 'This is test'\n    },\n  ]\n\n  return (\n    <div className=\"App\">\n      <LineChart lines={lines} data={data} width={800} height={400} annotations={annotations}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
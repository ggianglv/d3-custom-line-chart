{"version":3,"sources":["components/Annotation.js","components/LineChart.js","App.js","reportWebVitals.js","index.js"],"names":["Annotation","xScale","yScale","chartRef","data","margin","divRef","useRef","useState","divStyle","setDivStyle","useEffect","current","getBoundingClientRect","chartTop","top","chartLeft","left","chartRight","right","width","height","x","index","clicks","opacity","ref","style","className","annotation","_data","date","data2","LineChart","tooltipRef","tooltip","setTooltip","renderChart","max","Math","map","d","bottom","d3","domain","i","range","tooltipStyle","useMemo","tooltipWidth","tooltipHeight","visibility","annotations","result","forEach","item","push","lineGenerator","y","curve","svg","append","attr","call","tickFormat","_","ticks","tickSize","tickSizeOuter","datum","selectAll","enter","on","dots","fill","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAwCeA,EAtCI,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,OAC7CC,EAASC,iBAAO,MADyC,EAE/BC,mBAAS,IAFsB,mBAExDC,EAFwD,KAE9CC,EAF8C,KAG/DC,qBAAU,WAAO,IAAD,EAC8CR,EAASS,QAAQC,wBAAjEC,EADE,EACPC,IAAqBC,EADd,EACQC,KAAwBC,EADhC,EACyBC,MADzB,EAEUb,EAAOM,QAAQC,wBAAhCO,EAFO,EAEPA,MAAOC,EAFA,EAEAA,OACRC,EAAIrB,EAAOG,EAAKmB,OAElBR,EAAMD,EADAZ,EAAOE,EAAKoB,QACGnB,EAAOU,IAAMM,EAAS,GAC3CJ,EAAOD,EAAYM,EAAIjB,EAAOY,KAAOG,EAAQ,EAE7CH,EAAOG,EAAQf,EAAOY,KAAOZ,EAAOc,MAAQD,IAC9CD,EAAOC,EAAaE,EAAQf,EAAOY,KAAOZ,EAAOc,MAAQ,GAGvDF,EAAOD,EAAYX,EAAOY,OAC5BA,EAAOD,EAAYX,EAAOY,MAI5BP,EAAY,CACVK,MACAE,OACAQ,QAAS,MAEV,IAMH,OACE,qBAAKC,IAAKpB,EAAQqB,MAAOlB,EAAUmB,UAAU,kBAA7C,SACGxB,EAAKyB,cC7BNC,EAAQ,CACZ,CACEC,KAAM,OACNP,OAAQ,GACRK,WAAY,oBAEd,CACEE,KAAM,SACNP,OAAQ,IAEV,CACEO,KAAM,SACNP,OAAQ,EACRK,WAAY,gBAEd,CACEE,KAAM,SACNP,OAAQ,IAEV,CACEO,KAAM,SACNP,OAAQ,IAEV,CACEO,KAAM,SACNP,OAAQ,IAEV,CACEO,KAAM,SACNP,OAAQ,GACRK,WAAY,4BAIVG,EAAQ,CACZ,CACED,KAAM,OACNP,OAAQ,IAEV,CACEO,KAAM,SACNP,OAAQ,IAEV,CACEO,KAAM,SACNP,OAAQ,IAEV,CACEO,KAAM,SACNP,OAAQ,IAEV,CACEO,KAAM,SACNP,OAAQ,IAEV,CACEO,KAAM,SACNP,OAAQ,IAEV,CACEO,KAAM,SACNP,OAAQ,KAwLGS,EAlLG,WAAO,IAAD,EACEzB,mBAASsB,GADX,mBACf1B,EADe,KAEhBD,GAFgB,KAELI,iBAAO,OAClB2B,EAAa3B,iBAAO,MAHJ,EAIQC,mBAAS,MAJjB,mBAIf2B,EAJe,KAINC,EAJM,KAMtBzB,qBAAU,WACR0B,MACC,IACH,IAAMC,EAAMC,KAAKD,IAAL,MAAAC,KAAI,YAAQnC,EAAKoC,KAAI,SAAAC,GAAC,OAAIA,EAAEjB,WAAxB,mBAAoCQ,EAAMQ,KAAI,SAAAC,GAAC,OAAIA,EAAEjB,aAC/DnB,EAAS,CAACU,IAAK,GAAII,MAAO,GAAIuB,OAAQ,GAAIzB,KAAM,IAChDG,EAAQ,IAAMf,EAAOY,KAAOZ,EAAOc,MACnCE,EAAS,IAAMhB,EAAOU,IAAMV,EAAOqC,OAEnCzC,EAAS0C,MACZC,OAAOxC,EAAKoC,KAAI,SAACC,EAAGI,GAAJ,OAAUA,MAC1BC,MAAM,CAAC,EAAG1B,IAEPlB,EAASyC,MACZC,OAAO,CAAC,EAAGN,IACXQ,MAAM,CAACzB,EAAQ,IAEZ0B,EAAeC,mBAAQ,WAC3B,IAAKb,IAAYhC,EAASS,UAAYsB,EAAWtB,QAC/C,MAAO,GAFwB,MAIQT,EAASS,QAAQC,wBAA7CG,EAJoB,EAI1BC,KAAsBH,EAJI,EAITC,IAJS,EAKoBmB,EAAWtB,QAAQC,wBAA1DoC,EALmB,EAK1B7B,MAA6B8B,EALH,EAKL7B,OACxBJ,EAAOD,EAAYf,EAAOkC,EAAQZ,OAASlB,EAAOY,KAAOgC,EAAe,EACxElC,EAAMD,EAAWZ,EAAOiC,EAAQX,QAAUnB,EAAOU,IAAMmC,EAAgB,GAK3E,OAJInC,EAAMD,IACRC,EAAMD,EAAWZ,EAAOiC,EAAQX,QAAU0B,EAAgB,IAGrD,CACLjC,OACAF,MACAoC,WAAY,aAEb,CAAChB,EAAShC,EAASS,QAASsB,EAAWtB,UAEpCwC,EAAcJ,mBAAQ,WAC1B,IAAMK,EAAS,GAUf,OATAjD,EAAKkD,SAAQ,SAACC,EAAMhC,GACdgC,EAAK1B,YACPwB,EAAOG,KAAP,2BACKD,GADL,IAEEhC,cAKC8B,IACN,CAACjD,IAEEiC,EAAc,WAClB,IAAMoB,EAAgBd,MACnBrB,GAAE,SAACmB,EAAGI,GAAJ,OAAU5C,EAAO4C,MACnBa,GAAE,SAAAjB,GAAC,OAAIvC,EAAOuC,EAAEjB,WAChBmC,MAAMhB,KAEHiB,EAAMjB,IAAUxC,EAASS,SAASiD,OAAO,OAC5CC,KAAK,QAAS1C,EAAQf,EAAOY,KAAOZ,EAAOc,OAC3C2C,KAAK,SAAUzC,EAAShB,EAAOU,IAAMV,EAAOqC,QAC5CmB,OAAO,KACPC,KAAK,YAAa,aAAezD,EAAOY,KAAO,IAAMZ,EAAOU,IAAM,KAGrE6C,EAAIC,OAAO,KACRC,KAAK,QAAS,UACdA,KAAK,YAAa,eAAiBzC,EAAS,KAC5C0C,KAAKpB,IAAc1C,GAAQ+D,YAAW,SAACC,EAAGpB,GAAJ,OAAUzC,EAAKyC,GAAGd,SAE3D6B,EAAIC,OAAO,KACRC,KAAK,QAAS,UACdC,KAAKpB,IAAYzC,GAAQgE,MA7ElB,IAgFVN,EAAIC,OAAO,KACRC,KAAK,QAAS,QACdC,KAAKpB,IAAYzC,GAAQgE,MAlFlB,GAmFLC,UAAU/C,GACV4C,WAAW,IAAII,cAAc,IAGlCR,EAAIC,OAAO,KACRC,KAAK,QAAS,QACdA,KAAK,YAAa,eAAiBzC,EAAS,KAC5C0C,KAAKpB,IAAc1C,GACjBkE,UAAU9C,GACV2C,WAAW,IAAII,cAAc,IAIlCR,EAAIC,OAAO,QACRQ,MAAMjE,GACN0D,KAAK,QAAS,QACdA,KAAK,OAAQ,QACbA,KAAK,SAAU,WACfA,KAAK,eAAgB,GACrBA,KAAK,IAAKL,GAEbG,EAAIC,OAAO,QACRQ,MAAMrC,GACN8B,KAAK,QAAS,QACdA,KAAK,OAAQ,QACbA,KAAK,SAAU,WACfA,KAAK,eAAgB,GACrBA,KAAK,IAAKL,GAEbG,EAAIC,OAAO,KAAKS,UAAU,UACvBlE,KAAKA,GACLmE,QAAQV,OAAO,UACfC,KAAK,QAAS,OACdA,KAAK,OAAQ,WACbA,KAAK,MAAM,SAACrB,EAAGI,GAAJ,OAAU5C,EAAO4C,MAC5BiB,KAAK,MAAM,SAAArB,GAAC,OAAIvC,EAAOuC,EAAEjB,WACzBsC,KAAK,IAAK,GACVU,GAAG,aAAa,SAAC/B,EAAGlB,EAAOkD,GACdA,EAAKlD,GACbI,MAAM+C,KAAO,MACjBtC,EAAW,2BACNK,GADK,IAERlB,cAGHiD,GAAG,YAAY,SAAC/B,EAAGlB,EAAOkD,GACbA,EAAKlD,GACbI,MAAM+C,KAAO,UACjBtC,EAAW,SAGfwB,EAAIC,OAAO,KAAKS,UAAU,YACvBlE,KAAK4B,GACLuC,QAAQV,OAAO,UACfC,KAAK,QAAS,QACdA,KAAK,OAAQ,WACbA,KAAK,MAAM,SAACrB,EAAGI,GAAJ,OAAU5C,EAAO4C,MAC5BiB,KAAK,MAAM,SAAArB,GAAC,OAAIvC,EAAOuC,EAAEjB,WACzBsC,KAAK,IAAK,GACVU,GAAG,aAAa,SAAC/B,EAAGlB,EAAOkD,GACdA,EAAKlD,GACbI,MAAM+C,KAAO,MACjBtC,EAAW,2BACNK,GADK,IAERlB,cAGHiD,GAAG,YAAY,SAAC/B,EAAGlB,EAAOkD,GACbA,EAAKlD,GACbI,MAAM+C,KAAO,UACjBtC,EAAW,UAIjB,OACE,gCACE,qBAAKV,IAAKvB,IAEV,sBAAKuB,IAAKQ,EAAYP,MAAOoB,EAAcnB,UAAU,gBAArD,UACE,qBAAKA,UAAU,OAAf,wBACA,sBAAKA,UAAU,WAAf,UACE,sBAAMA,UAAU,QAAhB,kBACA,sBAAMA,UAAU,QAAhB,kCAEF,sBAAKA,UAAU,WAAf,UACE,sBAAMA,UAAU,QAAhB,qBACA,sBAAMA,UAAU,QAAhB,gBAAyBO,QAAzB,IAAyBA,OAAzB,EAAyBA,EAASX,eAIrC4B,EAAYZ,KAAI,SAACe,EAAMhC,GAAP,OACf,cAAC,EAAD,CAAwBnB,KAAMmD,EAAMtD,OAAQA,EAAQC,OAAQA,EAAQC,SAAUA,EAAUE,OAAQA,GAA/EkB,UCzOVoD,MARf,WACE,OACE,qBAAK/C,UAAU,MAAf,SACE,cAAC,EAAD,OCKSgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.431fb139.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\n\nconst Annotation = ({xScale, yScale, chartRef, data, margin}) => {\n  const divRef = useRef(null)\n  const [divStyle, setDivStyle] = useState({})\n  useEffect(() => {\n    const {top: chartTop, left: chartLeft, right: chartRight} = chartRef.current.getBoundingClientRect()\n    const {width, height} = divRef.current.getBoundingClientRect()\n    const x = xScale(data.index)\n    const y = yScale(data.clicks)\n    let top = chartTop + y + margin.top - height - 10\n    let left = chartLeft + x + margin.left - width / 2\n\n    if (left + width + margin.left + margin.right > chartRight) {\n      left = chartRight - width - margin.left - margin.right - 5\n    }\n\n    if (left < chartLeft + margin.left) {\n      left = chartLeft + margin.left\n    }\n\n\n    setDivStyle({\n      top,\n      left,\n      opacity: 1\n    })\n  }, [])\n\n  const getAnnotationStyle = () => {\n\n  }\n\n  return (\n    <div ref={divRef} style={divStyle} className=\"annotation-item\">\n      {data.annotation}\n    </div>\n  );\n};\n\nexport default Annotation;\n","import React, { useEffect, useState, useRef, useMemo } from 'react';\nimport * as d3 from 'd3'\n\nimport './line-chart.css'\nimport Annotation from './Annotation';\n\nconst _data = [\n  {\n    date: 'Test',\n    clicks: 10,\n    annotation: 'First annotation'\n  },\n  {\n    date: 'Test 1',\n    clicks: 20,\n  },\n  {\n    date: 'Test 2',\n    clicks: 5,\n    annotation: 'This is test',\n  },\n  {\n    date: 'Test 3',\n    clicks: 60,\n  },\n  {\n    date: 'Test 4',\n    clicks: 50,\n  },\n  {\n    date: 'Test 5',\n    clicks: 20,\n  },\n  {\n    date: 'Test 6',\n    clicks: 40,\n    annotation: 'This is test annotation',\n  },\n]\n\nconst data2 = [\n  {\n    date: 'Test',\n    clicks: 20,\n  },\n  {\n    date: 'Test 1',\n    clicks: 10,\n  },\n  {\n    date: 'Test 2',\n    clicks: 25,\n  },\n  {\n    date: 'Test 3',\n    clicks: 30,\n  },\n  {\n    date: 'Test 4',\n    clicks: 80,\n  },\n  {\n    date: 'Test 5',\n    clicks: 10,\n  },\n  {\n    date: 'Test 6',\n    clicks: 30,\n  },\n]\n\nconst TICKS = 4\n\nconst LineChart = () => {\n  const [data, setData] = useState(_data)\n  const chartRef = useRef(null)\n  const tooltipRef = useRef(null)\n  const [tooltip, setTooltip] = useState(null)\n\n  useEffect(() => {\n    renderChart()\n  }, [])\n  const max = Math.max(...data.map(d => d.clicks), ...data2.map(d => d.clicks))\n  const margin = {top: 50, right: 50, bottom: 50, left: 50};\n  const width = 800 - margin.left - margin.right;\n  const height = 400 - margin.top - margin.bottom;\n\n  const xScale = d3.scalePoint()\n    .domain(data.map((d, i) => i))\n    .range([0, width])\n\n  const yScale = d3.scaleLinear()\n    .domain([0, max])\n    .range([height, 0])\n\n  const tooltipStyle = useMemo(() => {\n    if (!tooltip || !chartRef.current || !tooltipRef.current) {\n      return {}\n    }\n    const {left: chartLeft, top: chartTop} = chartRef.current.getBoundingClientRect()\n    const {width: tooltipWidth, height: tooltipHeight} = tooltipRef.current.getBoundingClientRect()\n    let left = chartLeft + xScale(tooltip.index) + margin.left - tooltipWidth / 2\n    let top = chartTop + yScale(tooltip.clicks) + margin.top - tooltipHeight - 10\n    if (top < chartTop) {\n      top = chartTop + yScale(tooltip.clicks) + tooltipHeight + 10\n    }\n\n    return {\n      left,\n      top,\n      visibility: 'visible',\n    }\n  }, [tooltip, chartRef.current, tooltipRef.current])\n\n  const annotations = useMemo(() => {\n    const result = []\n    data.forEach((item, index) => {\n      if (item.annotation) {\n        result.push({\n          ...item,\n          index,\n        })\n      }\n    })\n\n    return result\n  }, [data])\n\n  const renderChart = () => {\n    const lineGenerator = d3.line()\n      .x((d, i) => xScale(i))\n      .y(d => yScale(d.clicks))\n      .curve(d3.curveMonotoneX)\n\n    const svg = d3.select(chartRef.current).append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n    svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(xScale).tickFormat((_, i) => data[i].date));\n\n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(d3.axisLeft(yScale).ticks(TICKS));\n\n    //Grid line\n    svg.append(\"g\")\n      .attr(\"class\", \"grid\")\n      .call(d3.axisLeft(yScale).ticks(TICKS)\n        .tickSize(-width)\n        .tickFormat(\"\").tickSizeOuter(0)\n      )\n\n    svg.append(\"g\")\n      .attr(\"class\", \"grid\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(xScale)\n        .tickSize(-height)\n        .tickFormat(\"\").tickSizeOuter(0)\n      )\n\n\n    svg.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr('fill', 'none')\n      .attr('stroke', '#8884d8')\n      .attr('stroke-width', 2)\n      .attr(\"d\", lineGenerator);\n\n    svg.append(\"path\")\n      .datum(data2)\n      .attr(\"class\", \"line\")\n      .attr('fill', 'none')\n      .attr('stroke', '#82ca9d')\n      .attr('stroke-width', 2)\n      .attr(\"d\", lineGenerator);\n\n    svg.append('g').selectAll(\"circle\")\n      .data(data)\n      .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"fill\", \"#8884d8\")\n      .attr(\"cx\", (d, i) => xScale(i))\n      .attr(\"cy\", d => yScale(d.clicks))\n      .attr(\"r\", 5)\n      .on(\"mouseover\", (d, index, dots) => {\n        const dot = dots[index]\n        dot.style.fill = 'red'\n        setTooltip({\n          ...d,\n          index,\n        })\n      })\n      .on(\"mouseout\", (d, index, dots) => {\n        const dot = dots[index]\n        dot.style.fill = '#8884d8'\n        setTooltip(null)\n      })\n\n    svg.append('g').selectAll(\"circle-2\")\n      .data(data2)\n      .enter().append(\"circle\")\n      .attr(\"class\", \"dot2\")\n      .attr(\"fill\", \"#82ca9d\")\n      .attr(\"cx\", (d, i) => xScale(i))\n      .attr(\"cy\", d => yScale(d.clicks))\n      .attr(\"r\", 5)\n      .on(\"mouseover\", (d, index, dots) => {\n        const dot = dots[index]\n        dot.style.fill = 'red'\n        setTooltip({\n          ...d,\n          index,\n        })\n      })\n      .on(\"mouseout\", (d, index, dots) => {\n        const dot = dots[index]\n        dot.style.fill = '#82ca9d'\n        setTooltip(null)\n      })\n  }\n\n  return (\n    <div>\n      <div ref={chartRef}/>\n\n      <div ref={tooltipRef} style={tooltipStyle} className=\"chart-tooltip\">\n        <div className=\"date\">15/10/2020</div>\n        <div className=\"property\">\n          <span className=\"label\">URL:</span>\n          <span className=\"value\">http://google.com</span>\n        </div>\n        <div className=\"property\">\n          <span className=\"label\">Clicks:</span>\n          <span className=\"value\">{tooltip?.clicks}</span>\n        </div>\n      </div>\n\n      {annotations.map((item, index) => (\n        <Annotation key={index} data={item} xScale={xScale} yScale={yScale} chartRef={chartRef} margin={margin}/>\n      ))}\n    </div>\n  );\n};\n\nexport default LineChart;\n","import React from 'react'\nimport './App.css';\nimport LineChart from \"./components/LineChart\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <LineChart/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}